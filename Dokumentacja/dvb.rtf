{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset238 Times New Roman;}{\f4\fswiss\fprq2\fcharset238 Arial;}{\f5\fnil\fprq0\fcharset238 Consolas{\*\falt Liberation Mono};}{\f6\fmodern\fprq1\fcharset128 Courier New;}{\f7\fnil\fprq2\fcharset238 Microsoft YaHei;}{\f8\fnil\fprq2\fcharset238 Mangal;}{\f9\fnil\fprq0\fcharset128 Mangal;}}
{\colortbl;\red0\green0\blue0;\red51\green51\blue51;\red0\green134\blue179;\red150\green152\blue150;\red197\green0\blue11;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045 Domyœlnie;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\hich\af7\dbch\af8\afs28\loch\f4\fs28 Nag³ówek;}
{\s16\sbasedon0\snext16\sb0\sa120 Treœæ tekstu;}
{\s17\sbasedon16\snext17\sb0\sa120\dbch\af9 Lista;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af9\afs24\ai\fs24 Podpis;}
{\s19\sbasedon0\snext19\noline\dbch\af9 Indeks;}
{\s20\sbasedon0\snext20\noline Zawartoœæ tabeli;}
{\s21\sbasedon20\snext21\qc\noline\b\ab Nag³ówek tabeli;}
}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice.org}{\vern3410}}\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Domy\u347\'3flnie;}}
\formshade\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
3.1.Scrambler DVB}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
Zgodnie z opisem scramblera addytywnego w punkcie 2.2.1 jego dzia\'b3anie opiera si\'ea na dodawaniu (zar\'f3wno w nadajniku, jak i odbiorniku) ci\'b9gu, kt\'f3ry zosta\'b3 wygenerowany przez wielomian h(x), szerzej opisany r\'f3wnie\'bf we wspomnianym punkcie. Taki algorytm wykorzystuje w\'b3asno\'9c\'e6, m\'f3wi\'b9c\'b9, \'bfe dodaj\'b9c ten sam ci\'b9g do siebie, wykonuj\'b9c operacj\'ea modulo 2 \'96 otrzymujemy ci\'b9g zerowy. W\'b3asno\'9c\'e6 ta jest przedstawiona na rysunku 3.1.1.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
Jednak takie post\'eapowanie wymusza na nas synchronizacj\'ea nadajnika i odbiornika \'96 kt\'f3ra b\'eadzie oparta o s\'b3owo synchronizuj\'b9ce. Wtedy te\'bf, je\'9cli uk\'b3ad wykryje takie s\'b3owo w przesy\'b3anym ci\'b9gu \'96 to klucze znajduj\'b9ce si\'ea w nadajniku i odbiorniku zostan\'b9 odnowione. Dzi\'eaki temu, je\'9cli w trakcie transmisji wyst\'b9pi\'b3 b\'b3\'b9d \'96 to b\'eadziemy mieli pewno\'9c\'e6, \'bfe dalsze przesy\'b3anie danych (po synchronizacji) b\'eadzie ju\'bf poprawne.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
Funkcja szyfruj\'b9ca:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\loch\f6
function [out] = DVB (key, in)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
  }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
  }{\rtlch \ltrch\loch\loch\f6
for i = in}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
    }{\rtlch \ltrch\loch\loch\f6
temp = xor (key(end), key(end - 1));}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
    }{\rtlch \ltrch\loch\loch\f6
key =  shift(key,1);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
    }{\rtlch \ltrch\loch\loch\f6
key(1) = temp;}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
    }{\rtlch \ltrch\loch\loch\f6
out(end+1) = xor (temp, i);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
  }{\rtlch \ltrch\loch\loch\f6
endfor}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\f6
  }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045\ql{\rtlch \ltrch\loch\loch\f6
endfunction}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
Deszyfrowanie korzysta z tej samej funkcji, nazwanej tutaj DVB.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af10\langfe2052\dbch\af8\afs24\lang1081\loch\f3\fs24\lang1045{\rtlch \ltrch\loch
Rysunek 3.1.1. }{\cf5\rtlch \ltrch\loch
(wykres, gdzie sygna\'b3y przed i po daj\'b9 0)}
\par }